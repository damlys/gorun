#!/bin/bash
set -e
for lib in "$(dirname "$0")"/lib/*.bash; do source "${lib}"; done

function main {
  local cmd="$1"
  local project_path="$2"
  local project_scope
  local project_name
  local module_repository
  local module_version

  project_scope="$(echo "${project_path}" | cut -d '/' -f 2)"
  project_name="$(echo "${project_path}" | cut -d '/' -f 4)"

  module_repository="$(yq '.repository' "${project_path}/.project.yaml")"
  module_version="$(yq '.version' "${project_path}/.project.yaml")"

  case "${cmd}" in
  "build")
    local cwd
    cwd="$(pwd)"
    cd "${project_path}"

    git ls-files --others --exclude-standard --cached | zip --names-stdin "../${project_name}-${module_version}.zip"

    cd "${cwd}"
    ;;

  "test")
    if ! str::ends_with "${module_repository}" "/${project_scope}/${project_name}"; then
      log::error "module does not match naming convention: ${project_path}"
      return 1
    fi
    if ! semver::validate "${module_version}"; then
      log::error "module version is not a valid SemVer number: ${project_path}"
      return 1
    fi
    terraform -chdir="${project_path}" fmt -check -recursive .
    terraform -chdir="${project_path}" init -input=false
    terraform -chdir="${project_path}" validate
    ;;

  "pre-publish")
    if git::tag_exists "${project_path}/v${module_version}"; then
      log::error "git tag with module version already exists: ${module_version}"
      log::info "update module version to fix the issue: ${project_path}"
      return 1
    fi
    if ! file::exists "${project_path}/CHANGELOG.md"; then
      log::error "changelog file does not exists: ${project_path}"
      return 1
    fi
    changelog::update_header "${project_path}" "${module_version}"
    ;;

  "publish")
    git::tag "${project_path}/v${module_version}"
    gcloud storage cp "${project_path}-${module_version}.zip" "gs://${module_repository}/${module_version}.zip"
    ;;

  "show")
    echo "module \"\" { source = \"gcs::https://www.googleapis.com/storage/v1/${module_repository}/${module_version}.zip\" }"
    ;;

  *)
    log::error "unknown command: ${cmd}"
    return 127
    ;;
  esac
}

main "$@"
